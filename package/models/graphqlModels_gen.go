// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type GetUserResult interface {
	IsGetUserResult()
}

type ProjectPageResult interface {
	IsProjectPageResult()
}

type ProjectPagesResult interface {
	IsProjectPagesResult()
}

type SignInResult interface {
	IsSignInResult()
}

type StudentResult interface {
	IsStudentResult()
}

type AbsoluteMediaHTTP struct {
	ID          string `json:"id"`
	URI         string `json:"uri"`
	URIAbsolute string `json:"uri_absolute"`
}

type CourseAPIMediaCollectionHTTP struct {
	ID          string             `json:"id"`
	BannerImage *AbsoluteMediaHTTP `json:"banner_image"`
	CourseImage *MediaHTTP         `json:"course_image"`
	CourseVideo *MediaHTTP         `json:"course_video"`
	Image       *ImageHTTP         `json:"image"`
}

type CourseHTTP struct {
	ID               string                        `json:"id"`
	BlocksURL        string                        `json:"blocks_url"`
	Effort           string                        `json:"effort"`
	EnrollmentStart  string                        `json:"enrollment_start"`
	EnrollmentEnd    string                        `json:"enrollment_end"`
	End              string                        `json:"end"`
	Name             string                        `json:"name"`
	Number           string                        `json:"number"`
	Org              string                        `json:"org"`
	ShortDescription string                        `json:"short_description"`
	Start            string                        `json:"start"`
	StartDisplay     string                        `json:"start_display"`
	StartType        string                        `json:"start_type"`
	Pacing           string                        `json:"pacing"`
	MobileAvailable  bool                          `json:"mobile_available"`
	Hidden           bool                          `json:"hidden"`
	InvitationOnly   bool                          `json:"invitation_only"`
	Overview         *string                       `json:"overview"`
	CourseID         string                        `json:"course_id"`
	Media            *CourseAPIMediaCollectionHTTP `json:"media"`
}

type CourseRelationHTTP struct {
	ID           string `json:"id"`
	LastModified string `json:"lastModified"`
	Parameter    string `json:"parameter"`
	CourseID     string `json:"courseId"`
	ObjectID     string `json:"objectId"`
}

type CourseRelationHTTPList struct {
	CourseRelations []*CourseRelationHTTP `json:"courseRelations"`
}

type CoursesListHTTP struct {
	Results    []*CourseHTTP `json:"results"`
	Pagination *Pagination   `json:"pagination"`
	CountRows  int           `json:"countRows"`
}

type DeletedCourseRelation struct {
	CourseRelationID string `json:"courseRelationId"`
}

type DeletedProjectPage struct {
	ProjectPageID string `json:"projectPageId"`
}

type DeletedStudent struct {
	StudentID string `json:"studentId"`
}

type EnrollmentHTTP struct {
	Created  string `json:"created"`
	Mode     string `json:"mode"`
	IsActive bool   `json:"isActive"`
	User     string `json:"user"`
	CourseID string `json:"course_id"`
}

type EnrollmentsListHTTP struct {
	Next     string            `json:"next"`
	Previous string            `json:"previous"`
	Results  []*EnrollmentHTTP `json:"results"`
}

type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

func (Error) IsSignInResult() {}

func (Error) IsProjectPageResult() {}

func (Error) IsProjectPagesResult() {}

func (Error) IsStudentResult() {}

type ImageHTTP struct {
	ID    string `json:"id"`
	Raw   string `json:"raw"`
	Small string `json:"small"`
	Large string `json:"large"`
}

type MediaHTTP struct {
	ID  string `json:"id"`
	URI string `json:"uri"`
}

type NewStudent struct {
	Email        string  `json:"email"`
	Password     string  `json:"password"`
	Nickname     string  `json:"nickname"`
	Firstname    string  `json:"firstname"`
	Lastname     string  `json:"lastname"`
	Middlename   string  `json:"middlename"`
	ParentID     *string `json:"parentId"`
	RobboUnitID  *string `json:"robboUnitId"`
	RobboGroupID *string `json:"robboGroupId"`
}

type Pagination struct {
	Next     string `json:"next"`
	Previous string `json:"previous"`
	Count    int    `json:"count"`
	NumPages int    `json:"num_pages"`
}

type ProjectPageHTTP struct {
	ProjectPageID       string `json:"projectPageId"`
	LastModified        string `json:"lastModified"`
	ProjectID           string `json:"projectId"`
	ProjectLastModified string `json:"projectLastModified"`
	Instruction         string `json:"instruction"`
	Notes               string `json:"notes"`
	Preview             string `json:"preview"`
	LinkScratch         string `json:"linkScratch"`
	Title               string `json:"title"`
	IsShared            bool   `json:"isShared"`
	Link                string `json:"link"`
}

func (ProjectPageHTTP) IsProjectPageResult() {}

type ProjectPageHTTPList struct {
	ProjectPages []*ProjectPageHTTP `json:"projectPages"`
	CountRows    int                `json:"countRows"`
}

func (ProjectPageHTTPList) IsProjectPagesResult() {}

type SignInInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
	UserRole int    `json:"userRole"`
}

type SignInResponse struct {
	AccessToken string `json:"accessToken"`
}

func (SignInResponse) IsSignInResult() {}

type SignUpRequest struct {
	Email      string `json:"email"`
	Password   string `json:"password"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
}

type StudentHTTP struct {
	UserHTTP     *UserHTTP `json:"userHttp"`
	RobboGroupID string    `json:"robboGroupId"`
	RobboUnitID  string    `json:"robboUnitId"`
}

func (StudentHTTP) IsStudentResult() {}

func (StudentHTTP) IsGetUserResult() {}

type StudentHTTPList struct {
	Students  []*StudentHTTP `json:"students"`
	CountRows int            `json:"countRows"`
}

type SuperAdminHTTP struct {
	UserHTTP *UserHTTP `json:"userHttp"`
}

type UpdateProfileInput struct {
	ID         string `json:"id"`
	Email      string `json:"email"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
	Active     bool   `json:"active"`
}

type UpdateProjectPage struct {
	ProjectID     string `json:"projectId"`
	ProjectPageID string `json:"projectPageId"`
	Instruction   string `json:"instruction"`
	Notes         string `json:"notes"`
	Title         string `json:"title"`
	IsShared      bool   `json:"isShared"`
}

type UserHTTP struct {
	ID         string `json:"id"`
	Email      string `json:"email"`
	Password   string `json:"password"`
	Role       int    `json:"role"`
	Nickname   string `json:"nickname"`
	Firstname  string `json:"firstname"`
	Lastname   string `json:"lastname"`
	Middlename string `json:"middlename"`
	CreatedAt  string `json:"createdAt"`
	Active     bool   `json:"active"`
}
